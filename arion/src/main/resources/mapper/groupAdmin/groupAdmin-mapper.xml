<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.arion.app.group.admin.mapper.GroupAdminMapper">
	<select id="selectempList" resultType="EmployeeVO">
		SELECT employee_no
		,employee_name
		,hire_date
		,employee_id
		,department_name
		,rank_name
		FROM employees
		WHERE company_code =  #{companyCode}
		ORDER BY employee_no
	</select>
	<select id="selectDeptList" resultType="DepartmentVO">
		SELECT department_name,department_no,manager
		FROM departments
		WHERE company_code = #{companyCode}
		ORDER BY department_no
	</select>
	<select id="selectRankList" resultType="RankVO">
		SELECT rank_name,rank_id,rank_ranking
		FROM rank
		WHERE company_code = #{companyCode}
		ORDER BY rank_id
	</select>
	<insert id="insertEmp" parameterType="EmployeeVO">
		<selectKey keyProperty="employeeNo"
				   resultType="Integer"
				   order="BEFORE">
			SELECT NVL(MAX(employee_no), 0) + 1
			FROM employees
		</selectKey>
		INSERT INTO employees (
		 employee_no
		,employee_name
		,employee_resp
		,company_code
		,employee_id
		,employee_pw
		,department_name
		,rank_name
		,hire_date
		)
		VALUES(
		 #{employeeNo}
		,#{employeeName}
		,#{employeeResp}
		,#{companyCode}
		,#{employeeId}
		,#{employeePw}
		,#{departmentName}
		,#{rankName}
		<choose>
			<when test="hireDate !=null">
				,#{hireDate}
			</when>
			<otherwise>
				,sysdate
			</otherwise>
		</choose>
		)
	</insert>
	<select id="selectEmpInfo" resultType="EmployeeVO">
		SELECT employee_no
			  ,employee_name
			  ,hire_date
	          ,resign_date
	          ,employee_resp
			  ,employee_id
	          ,employee_pw
			  ,department_name
			  ,rank_name
		FROM employees
		WHERE employee_no = #{employeeNo}
	</select>
	<update id="updateEmp">
		UPDATE employees
		SET
		     employee_name = #{employeeName}
		    ,employee_id = #{employeeId}
		     <if test="employeePw!=null and employeePw!='' ">
		    ,employee_pw = #{employeePw}
		    </if>
		    <if test="departmentName != null and departmentName!=''">
		    ,department_name = #{departmentName}
		    </if>
		    <if test="rankName !=null and rankName !=''">
		    ,rank_name = #{rankName}
		    </if>
		    <if test="employeeResp != null and employeeResp != ''">
		    ,employee_resp = #{employeeResp}
		    </if>
		    
		WHERE employee_no = #{employeeNo}
	</update>
	<delete id="deleteEmp" parameterType="EmployeeVO">
		DELETE FROM employees
		WhERE employee_no = #{employeeNo}
	</delete>
	
	<select id="selectUserCnt" resultType="GroupAdminVO">
		 SELECT DISTINCT
		    c.company_code, 
		    c.users_cnt - COALESCE(e.emp_count, 0) AS users_cnt 
		FROM 
		    contract c
		LEFT JOIN 
		    (SELECT company_code, COUNT(*) AS emp_count 
		     FROM employees 
		     WHERE company_code = #{companyCode}
		     GROUP BY company_code) e
		ON 
		    c.company_code = e.company_code
		WHERE 
		    c.company_code =#{companyCode}
	</select>
	
	<select id="selectEndSub" resultType="GroupAdminVO">
		SELECT contract_no
		      ,start_date
		      ,final_date
		      ,total_pay_price
		      ,contract_state
		FROM contract
					<![CDATA[
		WHERE final_date < sysdate AND company_code = #{companyCode}
							]]>
		ORDER BY final_date
	</select>
	<select id="selectSubInfo" resultType="GroupAdminVO">
		SELECT DISTINCT contract_no
					   ,start_date
					   ,final_date
					   ,users_cnt
					   ,month_pay_price
					   ,total_pay_price
					   ,contract_state
					   ,regular_date
					   ,(SELECT LISTAGG(u.module_name, ',') WITHIN GROUP (ORDER BY u.module_name)
        				 FROM usemodule u
        				 WHERE u.contract_no = contract_no) AS module_names
		FROM contract
		WHERE contract_state = '계약중' AND company_code= #{companyCode}
	</select>
	
	<insert id="deptInSave" parameterType="DepartmentVO">
		<selectKey keyProperty="departmentNo"
				   resultType="Integer"
				   order="BEFORE">
			SELECT NVL(MAX(department_no), 0) + 1
			FROM departments
		</selectKey>
		INSERT INTO departments(
								 department_no
								,department_name
								,company_code)
		VALUES (
				 #{departmentNo}
				,#{departmentName}
				,#{companyCode})
	</insert>
	
	<delete id="deptDeSave">
		DELETE 
		FROM departments 
		WHERE company_code = #{companyCode}
	</delete>
	
	<insert id="rankInSave" parameterType="rankVO">
		<selectKey keyProperty="rankId"
				   resultType="Integer"
				   order="BEFORE">
			SELECT NVL(MAX(rank_id), 0) + 1
			FROM rank
		</selectKey>
		INSERT INTO rank(
						 rank_id
						,rank_name
						,company_code)
		VALUES(
				 #{rankId}
				,#{rankName}
				,#{companyCode} )
	</insert>
	
	<delete id="rankDeSave">
		DELETE FROM rank WHERE company_code = #{companyCode}
	</delete>
	<select id="selectCom" resultType="CompanyVO">
		SELECT company_code
		      ,company_name
		      ,company_tel
		      ,ceo_name
		      ,company_id
		      ,company_pw
		      ,company_business_number
		      ,company_type
		      ,ceo_email
		      ,company_address
		      ,ceo_phone
		FROM company
		WHERE company_code = #{companyCode}
	</select>
	<update id="companySave" parameterType="CompanyVO">
		UPDATE company
		SET	   company_name = #{companyName}
		      ,company_tel = #{companyTel}
		      ,ceo_name = #{ceoName}
		      <if test="companyPw != null and companyPw != '' ">
		      ,company_pw = #{companyPw}
		      </if>
		      ,company_type = #{companyType}
		      ,ceo_email = #{ceoEmail}
		      ,company_address = #{companyAddress}
		      ,ceo_phone = #{ceoPhone}
		WHERE company_code = #{companyCode}
	</update>
	
	<select id="companyPw">
		SELECT company_pw 
		FROM company
		WHERE company_code = #{companyCode}
	</select>
</mapper>